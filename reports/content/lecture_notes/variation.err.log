Traceback (most recent call last):
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jfoley19/miniconda3/envs/jbook/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def evaluate_w(var, H11, H12, H22, S12):
    """
    evaluate the variational integral W = <phi|H|phi>/<phi|phi>

    :param var: the parameters, c1 and c2
    :param H11: <phi_1 | H | phi_1>
    :param H12: <phi_1 | H | phi_2>
    :param H22: <phi_2 | H | phi_2>
    :param S12: <phi_1 | phi_1>
    :return W: the variational integral
    """

    c1, c2 = var

    numerator = c1**2 * H11 + 2 * c1*c2 * H12 + c2**2 * H22
    denominator = c1**2 + 2 * S12 * c1*c2 + c2**2
    
    W = numerator / denominator
                
    return W
    
# minimize W
from scipy.optimize import minimize

L = 1.0

# use a fine-grain grid to be sure numerical integrals are accurate
x = np.linspace(0, L, 5001)

# normalization constant
phi_1 = x * (L-x)
N1 = 1.0 / np.sqrt(np.trapz(phi_1**2, x))
phi_1 *= N1

# second derivative
phi_1pp = -2 * N1

# normalization constant
phi_2 = x**2 * (L-x)**2
N2 = 1.0 / np.sqrt(np.trapz(phi_2**2, x))
phi_2 *= N2

# second derivative
phi_2pp = N2 * ( 2 * (L-x)**2 - 8 * x * (L-x) + 2 * x**2 * L )

# <phi1|H|phi1>
H11 = -0.5 * np.trapz(phi_1 * phi_1pp, x)
    
# <phi1|H|phi2>
# <phi2|H|phi1> = <phi1|H|phi2>* because H is Hermitian
H12 = -0.5 * np.trapz(phi_1 * phi_2pp, x)

 # <phi2|H|phi2>
H22 = -0.5 * np.trapz(phi_2 * phi_2pp, x)

# S11 = <phi_1|phi_1> = 1 because phi_1 is normalized
# S22 = <phi_2|phi_2> = 1 because phi_2 is normalized
# S12 = S21 = <phi_1 | phi_2>
S12 = np.trapz(phi_1 * phi_2, x)
    
res = minimize(evaluate_w, [1, 1], args=(H11, H12, H22, S12) )

c1 = res.x[0]
c2 = res.x[1]
w = evaluate_w([c1, c2], H11, H12, H22, S12)
print("c1 = %10.5f" % (res.x[0]))
print("c2 = %10.5f" % (res.x[1]))
print("w  = %10.5f Eh" % (w))

------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 23[39m
[32m     20[39m     [38;5;28;01mreturn[39;00m W
[32m     22[39m [38;5;66;03m# minimize W[39;00m
[32m---> [39m[32m23[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mscipy[39;00m[34;01m.[39;00m[34;01moptimize[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m minimize
[32m     25[39m L = [32m1.0[39m
[32m     27[39m [38;5;66;03m# use a fine-grain grid to be sure numerical integrals are accurate[39;00m

[31mModuleNotFoundError[39m: No module named 'scipy'

