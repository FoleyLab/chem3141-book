Traceback (most recent call last):
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jfoley19/miniforge3/envs/jbook/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
"""MgH+ Polaritonic Potential Energy Surfaces"""

__authors__ = ["Ruby Manderna, Lane Tolley, Figen Suchanek, Jonathan J. Foley, "]
__email__   = ["rmandern@uncc.edu, ptolley1@uncc.edu, suchanekf@wpunj.edu, jfoley19@uncc.edu, "]
__credits__ = ["Ruby Manderna, Lane Tolley, Figen Suchanek, Jonathan J. Foley"]
__copyright__ = "(c) 2008-2020, The Psi4Education Developers"
__license__   = "BSD-3-Clause"
__date__      = "2021-02-11"


### Import libraries to be used throughout
# basic psi4 library
import psi4
# pyplot
from matplotlib import pyplot as plt
# numpy
import numpy as np
# scipy
from scipy.interpolate import InterpolatedUnivariateSpline
# linear algebra package from numpy
from numpy import linalg as LA
# time-dependent scf library from psi4 for computing excited states and transition dipole moments
from psi4.driver.procrouting.response.scf_response import tdscf_excitations
#from matplotlib import pyplot as plt


_expected_lambda = 309.9604960590
_expected_V = 853.9819621540001
_expected_Eg_val = -200.33018284449852
_expected_Ee_val = -200.18141088127473
_expected_tdm_val = 2.1837588170011095
_expected_deltaE_eV = 4.04823389128266

_expected_H_Rabi = np.array([[-2.00330183e+02,  0.00000000e+00,  0.00000000e+00],
                            [ 0.00000000e+00, -2.00181411e+02,  6.55127645e-03],
                            [ 0.00000000e+00,  6.55127645e-03, -2.00181411e+02]])




n_geoms = 25
_expected_rs = []
for i in range(0,n_geoms):
    _expected_rs.append(1.1 + i*0.1)
    
_expected_Eg_array = np.array([-200.25367486, -200.30835506, -200.34317863, -200.36433935, -200.37609145,
 -200.38129671, -200.38191454, -200.37932951, -200.37454644, -200.36830617,
 -200.36115804, -200.35350922, -200.34566042, -200.33783194, -200.33018284,
 -200.32282542, -200.31583611, -200.30926385, -200.30313622, -200.29746454,
 -200.29224756, -200.28747484, -200.28312913, -200.27918888, -200.27562959])

_expected_Ee_array = np.array([-200.01466921, -200.07666894, -200.11946658, -200.14880628, -200.16864693,
 -200.18166725, -200.18969265, -200.19402683, -200.19564857, -200.19531169,
 -200.19361608, -200.19103812, -200.18795606, -200.18466878, -200.18141086,
 -200.17835946, -200.1756464,  -200.17336483, -200.17157804, -200.17032261,
 -200.16961004, -200.16943208, -200.16976269, -200.17056035, -200.17177513])

_expected_tdm_array = np.array([1.35621453, 1.3765366,  1.41027036, 1.45492843, 1.50865744, 1.56955814,
 1.63570115, 1.70523104, 1.7765825,  1.84846023, 1.91980311, 1.98972481,
 2.05748777, 2.12237872, 2.18375882, 2.24092718, 2.29313572, 2.33957417,
 2.37942975, 2.41195173, 2.43656045, 2.45296981, 2.46122806, 2.46173081,
 2.45518776])

psi4.core.set_output_file('output.dat', False)
------------------


[31m---------------------------------------------------------------------------[39m
[31mImportError[39m                               Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 13[39m
[32m      8[39m __date__      = [33m"[39m[33m2021-02-11[39m[33m"[39m
[32m     11[39m [38;5;66;03m### Import libraries to be used throughout[39;00m
[32m     12[39m [38;5;66;03m# basic psi4 library[39;00m
[32m---> [39m[32m13[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mpsi4[39;00m
[32m     14[39m [38;5;66;03m# pyplot[39;00m
[32m     15[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mmatplotlib[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m pyplot [38;5;28;01mas[39;00m plt

[36mFile [39m[32m~/Code/psi4/objdir-Release/stage/lib/psi4/__init__.py:71[39m
[32m     68[39m data_dir = [38;5;28mstr[39m(data_dir)
[32m     70[39m [38;5;66;03m# Init core[39;00m
[32m---> [39m[32m71[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01m.[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m core
[32m     73[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mpsi4[39;00m[34;01m.[39;00m[34;01mcore[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m get_num_threads, set_num_threads
[32m     74[39m core.initialize()

[31mImportError[39m: cannot import name 'core' from partially initialized module 'psi4' (most likely due to a circular import) (/Users/jfoley19/Code/psi4/objdir-Release/stage/lib/psi4/__init__.py)

